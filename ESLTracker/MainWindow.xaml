<Window xmlns:Game="clr-namespace:ESLTracker.Controls.Game"  xmlns:Settings="clr-namespace:ESLTracker.Controls.Settings" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:local="clr-namespace:ESLTracker"
        xmlns:Decks="clr-namespace:ESLTracker.Controls.Decks" 
        x:Class="ESLTracker.MainWindow"
        xmlns:DataModel="clr-namespace:ESLTracker.DataModel"
        xmlns:ViewModels="clr-namespace:ESLTracker.ViewModels"
        xmlns:Converters="clr-namespace:ESLTracker.Utils.Converters"
        xmlns:Properties="clr-namespace:ESLTracker.Properties" 
        xmlns:Controls="clr-namespace:ESLTracker.Controls" 
        mc:Ignorable="d"
        x:Name="mainWindow"
        Title="ESL Tracker" Height="553.805" SizeToContent="Width"
        BorderThickness="2" 
        Closing="Window_Closing"
        Left="{Binding Path=MainWindowPositionX, Mode=TwoWay, Source={x:Static Properties:Settings.Default}}"
        Top="{Binding Path=MainWindowPositionY, Mode=TwoWay, Source={x:Static Properties:Settings.Default}}"
        ShowInTaskbar="{Binding ShowInTaskBar, Mode=TwoWay}"
        WindowState="{Binding WindowState, Mode=TwoWay}"
        StateChanged="mainWindow_StateChanged"
    >
    <Window.Resources>
    </Window.Resources>
    <Window.DataContext>
        <ViewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Grid>
        <DockPanel>
            <Menu IsEnabled="{Binding AllowCommands}" x:Name="menu"  VerticalAlignment="Top" DockPanel.Dock="Top">
                <MenuItem Header="Deck">
                    <MenuItem 
                          Command="{Binding CommandNewDeck}" 
                          VerticalAlignment="Center"
                          >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Height="16" Source="/Resources/MenuIcons/newDeck.png" />
                                <ContentPresenter Content="New Deck" Margin="5,0,0,0" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem 
                          Command="{Binding CommandEditDeck}" 
                          VerticalAlignment="Center"
                          >
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Height="16" Source="/Resources/MenuIcons/edit.png" />
                                <ContentPresenter Content="Edit Deck" Margin="5,0,0,0" />
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Height="16" Source="/Resources/MenuIcons/statistics.png" />
                            <ContentPresenter Content="Statistics" Margin="5,0,0,0" />
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem Header="Rewards" Command="{Binding CommandShowRewards}" />
                    <MenuItem Header="Arena runs" Command="{Binding CommandShowArenaStats}" />
                    <MenuItem Header="Games" Command="{Binding CommandShowGamesStats}" />
                    <MenuItem Header="Ranked progress" Command="{Binding CommandShowRankedProgress}" />
                </MenuItem>
                <MenuItem Header="Overlays">
                    <MenuItem Command="{Binding CommandManageOverlayWindow}" CommandParameter="{x:Type local:OverlayToolbar}" IsCheckable="true" Header="Add game/reward/pack" IsChecked="{Binding OverlayWindows, Converter={Converters:ShowOverlayWindowToBool},  ConverterParameter={x:Type local:OverlayToolbar}}"/>
                    <MenuItem Command="{Binding CommandManageOverlayWindow}" CommandParameter="{x:Type local:DeckOverlay}" IsCheckable="true" Header="Card list" IsChecked="{Binding OverlayWindows, Converter={Converters:ShowOverlayWindowToBool}, ConverterParameter={x:Type local:DeckOverlay}}"/>
                </MenuItem>
                <MenuItem Command="{Binding CommandRunGame}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Height="16" Source="/Resources/MenuIcons/runESL.png" />
                            <ContentPresenter Content="Run game" Margin="5,0,0,0" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{Binding CommandEditSettings}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Height="16" Source="/Resources/MenuIcons/settings.png" />
                            <ContentPresenter Content="Settings" Margin="5,0,0,0" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Command="{Binding CommandAbout}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Height="16" Source="/Resources/MenuIcons/settings.png" />
                            <ContentPresenter Content="About..." Margin="5,0,0,0" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
            </Menu>
            <Grid>
                <Grid VerticalAlignment="Top" Panel.ZIndex="2"
                        Visibility="{Binding SettingsVisible, Mode=TwoWay, Converter={Converters:BoolToVisibilty}}">
                    <Settings:SettingsPanel x:Name="settingsPanel" Style="{DynamicResource ModalControlInWindow}" />
                </Grid>
                <DockPanel>
                    <DockPanel                            
                            DockPanel.Dock="Top"
                        HorizontalAlignment="Stretch"
                            Visibility="{Binding AppUpateVersionInfo.IsAvailable, Converter={Converters:BoolToVisibilty}}" 
                            Background="DarkRed">
                        <TextBlock Foreground="White" DockPanel.Dock="Left" FontSize="12">
                            New version of tracker is available.
                            <Controls:ClickableUrl Foreground="White" NavigateUri="https://github.com/MarioZG/elder-scrolls-legends-tracker/releases/latest">Open changelog </Controls:ClickableUrl>
                            <Controls:ClickableUrl Foreground="White" NavigateUri="{Binding AppUpateVersionInfo.DownloadUrl}">Download</Controls:ClickableUrl>
                        </TextBlock>
                        <TextBlock DockPanel.Dock="Right" HorizontalAlignment="Right" Padding="4,0,4,0">
                            <Hyperlink Foreground="White" Command="{Binding CommandCloseNewVersionInfo}"> X </Hyperlink>
                        </TextBlock>                       
                    </DockPanel>
                    <WrapPanel 
                            DockPanel.Dock="Left"
                            IsEnabled="{Binding AllowCommands}"
                            Visibility="{Binding DeckListVisible, Mode=TwoWay, Converter={Converters:BoolToVisibilty}}">
                        <Decks:DeckList x:Name="deckList"/>
                    </WrapPanel>
                    <WrapPanel
                        Visibility="{Binding DeckPreviewVisible, Mode=TwoWay, Converter={Converters:BoolToVisibilty}}">
                        <Decks:DeckPreview 
                            Deck="{Binding Source={x:Static DataModel:Tracker.Instance}, Path=ActiveDeck}"/>
                    </WrapPanel>
                    <WrapPanel
                        Visibility="{Binding DeckEditVisible, Mode=TwoWay, Converter={Converters:BoolToVisibilty}}">
                        <Decks:DeckEdit
                            Deck="{Binding Source={x:Static DataModel:Tracker.Instance}, Path=ActiveDeck}"/>
                    </WrapPanel>
                    <WrapPanel 
                        Visibility="{Binding EditGameVisible, Mode=TwoWay, Converter={Converters:BoolToVisibilty}}">
                        <Game:EditGame IsEditControl="True" />
                    </WrapPanel>
                </DockPanel>
            </Grid>
        </DockPanel>
        <tb:TaskbarIcon
                x:Name="taskBarIcon"
                IconSource="/Resources/TrayIcon.ico"
                DoubleClickCommand="{Binding CommandNotifyIconLeftClick}"
                LeftClickCommand="{Binding CommandNotifyIconLeftClick}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Run game" Command="{Binding CommandRunGame}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/MenuIcons/runESL.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Show application" Command="{Binding CommandNotifyIconLeftClick}" CommandParameter="show">
                        <MenuItem.Icon>
                            <Image Source="/Resources/WindowIcons/mainForm.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Exit" Command="{Binding CommandExit}" CommandParameter="{StaticResource True}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/MenuIcons/exit.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</Window>
