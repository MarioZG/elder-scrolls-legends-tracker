<Window x:Class="ESLTracker.ArenaStats"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ViewModels="clr-namespace:ESLTracker.ViewModels"
        xmlns:Converters="clr-namespace:ESLTracker.Utils.Converters"
        xmlns:local="clr-namespace:ESLTracker"
        mc:Ignorable="d"
        Title="Arena Runs Summary">
    <Window.DataContext>
        <ViewModels:ArenaStatsViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Converters:ClassToAttributesIconsConverter x:Key="ClassToAttributesIconsConverter"/>
        <Style x:Key="bestAverage" TargetType="{x:Type TextBlock}">
            <!-- http://stackoverflow.com/questions/13534485/same-setters-for-different-triggers -->
            <Style.Triggers>
                <Trigger Property="Tag" Value="1">
                    <Setter Property="Foreground" Value="DarkGreen"/>
                    <Setter Property="FontWeight" Value="ExtraBold"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <StackPanel>
        <DockPanel Background="{DynamicResource {x:Static SystemColors.InfoBrushKey}}">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="5,10,5,5">
                <Label Content="Arena type"/>
                <ComboBox 
                    ItemsSource="{Binding ArenaTypeSeletorValues}" SelectedItem="{Binding DeckType, Mode=TwoWay}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5,5,5,10">
                <Label Content="Date filter. Select predefined:"/>
                <ComboBox DockPanel.Dock="Top" 
                      ItemsSource="{Binding FilterDateOptions}"
                      SelectedItem="{Binding FilterDateSelectedOption}"
                      />
                <Label Content=" or choose any range"/>
                <DatePicker x:Name="dtFrom" SelectedDate="{Binding FilterDateFrom, Mode=TwoWay}"/>
                <DatePicker x:Name="dtTo" SelectedDate="{Binding FilterDateTo, Mode=TwoWay}"/>
            </StackPanel>
        </DockPanel>
        <DataGrid x:Name="dataGrid" ItemsSource="{Binding DisplayDataSource}"
                  AutoGenerateColumns="False" GridLinesVisibility="Horizontal">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}" >
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Style.Triggers>
                        <!-- TOTAL row in bold-->
                        <DataTrigger Binding="{Binding Class}" Value="TOTAL">
                            <Setter Property="FontWeight" Value="ExtraBold"/>
                        </DataTrigger>
                        <!-- change sel ted row background-->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="AliceBlue" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <ItemsControl ItemsSource="{Binding Path=Class, Converter={StaticResource ClassToAttributesIconsConverter}}" BorderThickness="0"
                                                ToolTip="{Binding Class}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel IsItemsHost="True" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Image Width="15" Source="{Binding}"></Image>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Class" Binding="{Binding Class}">
                </DataGridTextColumn>
                <DataGridTextColumn Header="Runs" Binding="{Binding NumberOfRuns, StringFormat={}{0,4:N0}}"/>
                <DataGridTextColumn Header="Avg Wins" Binding="{Binding AvgWins, StringFormat={}{0,7:N1}}"/>
                <DataGridTextColumn Header="Best run" Binding="{Binding Best, StringFormat={}{0,6:N0}}"/>
                <DataGridTextColumn Header="Avg gold" Binding="{Binding Avg.Gold, StringFormat={}{0,7:N1}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource bestAverage}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Avg.MarkGold}" Value="True">
                                    <Setter Property="Tag" Value="1" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Avg gems" Binding="{Binding Avg.SoulGem, StringFormat={}{0,7:N1}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource bestAverage}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Avg.MarkSoulGem}" Value="True">
                                    <Setter Property="Tag" Value="1" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Avg packs" Binding="{Binding Avg.Pack, StringFormat={}{0,7:N1}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource bestAverage}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Avg.MarkPack}" Value="True">
                                    <Setter Property="Tag" Value="1" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Avg cards" Binding="{Binding Avg.Card, StringFormat={}{0,7:N1}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource bestAverage}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Avg.MarkCard}" Value="True">
                                    <Setter Property="Tag" Value="1" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Total gold" Binding="{Binding Total.Gold, StringFormat={}{0,7:N0}}"/>
                <DataGridTextColumn Header="Total gems" Binding="{Binding Total.SoulGem, StringFormat={}{0,7:N0}}"/>
                <DataGridTextColumn Header="Total packs" Binding="{Binding Total.Pack, StringFormat={}{0,7:N0}}"/>
                <DataGridTextColumn Header="Total cards" Binding="{Binding Total.Card, StringFormat={}{0,7:N0}}"/>
                <DataGridTextColumn Header="Best gold" Binding="{Binding Max.Gold, StringFormat={}{0,7:N0}}"/>
                <DataGridTextColumn Header="Best gems" Binding="{Binding Max.SoulGem, StringFormat={}{0,7:N0}}"/>
                <DataGridTextColumn Header="Best packs" Binding="{Binding Max.Pack, StringFormat={}{0,7:N0}}"/>
                <DataGridTextColumn Header="Best cards" Binding="{Binding Max.Card, StringFormat={}{0,7:N0}}"/>
            </DataGrid.Columns>
        </DataGrid>
    </StackPanel>
</Window>
