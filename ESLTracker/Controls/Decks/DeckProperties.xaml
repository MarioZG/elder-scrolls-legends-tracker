<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ESLTracker.Controls.Decks"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Enums="clr-namespace:ESLTracker.DataModel.Enums"
             xmlns:Controls="clr-namespace:ESLTracker.Controls" 
             xmlns:Converters="clr-namespace:ESLTracker.Utils.Converters"
             xmlns:ViewModels="clr-namespace:ESLTracker.ViewModels.Decks" 
             x:Class="ESLTracker.Controls.Decks.DeckProperties"
             mc:Ignorable="d" 
             x:Name="editDeck"
             >
    <UserControl.DataContext>
        <ViewModels:DeckPropertiesViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <ObjectDataProvider x:Key="DeckTypeEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Enums:DeckType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    <StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="20*"/>
                <RowDefinition Height="20*"/>
                <RowDefinition Height="20*"/>
                <RowDefinition Height="20*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*"/>
                <ColumnDefinition Width="80*"/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="10,20,10,0" />
                </Style>
                <Style TargetType="{x:Type Controls:DeckClassSelector}">
                    <Setter Property="Margin" Value="0,5,0,5" />
                </Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Margin" Value="0,5,0,5" />
                </Style>
            </Grid.Resources>
            <Label Content="Type" Grid.Row="0" Margin="0,2,2,2" Grid.ColumnSpan="2"/>
            <ComboBox x:Name="cbDeckType" Margin="0,2,2,2"
                      ItemsSource="{Binding Source={StaticResource DeckTypeEnum}}" 
                      SelectedItem="{Binding DeckType}" Grid.Row="0" Grid.Column="1"
                      IsEnabled="{Binding CanChangeType}"/>
            <Label Content="Deck name" Margin="0,2,2,2" Grid.Row="1"/>
            <TextBox x:Name="txtName" TextWrapping="Wrap"  Margin="0,2,2,2"
                     Text="{Binding Deck.Name, Mode=TwoWay}" Grid.Column="1" Grid.Row="1"/>
            <Label Content="Arena rank" Grid.Row="3"
                   Visibility="{Binding Deck.Type, Converter={Converters:DeckTypeToArenaRankVisibilty}}" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
            <local:ArenaRank Grid.Row="3" Grid.Column="1"
                             Margin="0,2,2,2"
                             SelectedRank="{Binding Deck.ArenaRank, Mode=TwoWay}" 
                             Visibility="{Binding Deck.Type, Converter={Converters:DeckTypeToArenaRankVisibilty}}" Grid.RowSpan="2"
            />
        </Grid>
        <Controls:DeckClassSelector 
                x:Name="deckClass" 
                Margin="0,2,2,2"
                ToolTip="Select deck attributes or class"
                SelectedClass="{Binding DataContext.Deck.Class, ElementName=editDeck, Mode=TwoWay}"/>
    </StackPanel>
</UserControl>
