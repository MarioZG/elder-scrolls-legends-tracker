<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ESLTracker.Controls.Decks"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Enums="clr-namespace:ESLTracker.DataModel.Enums"
             xmlns:Controls="clr-namespace:ESLTracker.Controls" 
             xmlns:Converters="clr-namespace:ESLTracker.Utils.Converters"
             xmlns:ViewModels="clr-namespace:ESLTracker.ViewModels.Decks" 
             x:Class="ESLTracker.Controls.Decks.EditDeck"
             mc:Ignorable="d" 
             >
    <UserControl.DataContext>
        <ViewModels:EditDeckViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <ObjectDataProvider x:Key="DeckTypeEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Enums:DeckType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Converters:CommandMultipleParamaters x:Key="CommandMultipleParamatersConverter" />
        <Converters:DeckTypeToArenaRankVisibiltyCollapsed x:Key="DeckTypeToArenaRankVisibiltyCollapsedConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20*"/>
            <RowDefinition Height="20*"/>
            <RowDefinition Height="20*"/>
            <RowDefinition Height="20*"/>
            <RowDefinition Height="20*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="78*"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="10,20,10,0" />
            </Style>
            <Style TargetType="{x:Type Controls:DeckClassSelector}">
                <Setter Property="Margin" Value="0,5,0,5" />
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="0,5,0,5" />
            </Style>
        </Grid.Resources>
        <Label Content="Type" Grid.Row="0" Margin="5,20,0,0"/>
        <ComboBox x:Name="cbDeckType" Margin="0,20,0,0"
                  ItemsSource="{Binding Source={StaticResource DeckTypeEnum}}" 
                  SelectedItem="{Binding DeckType}" Grid.Row="0" Grid.Column="1"
                  IsEnabled="{Binding CanChangeType}"/>
        <Label Content="Deck name" Margin="0,5,5,5" Grid.Row="1"/>
        <TextBox x:Name="txtName" TextWrapping="Wrap"  Margin="5,5,5,5"
                 Text="{Binding Deck.Name}" Grid.Column="1" Grid.Row="1"/>
        <StackPanel Grid.Row="2" Grid.ColumnSpan="2">
        <Label Content="Deck attributes and class"/>
        <Controls:DeckClassSelector x:Name="deckClass"/>
        </StackPanel>       
        <Label Content="Arena rank" Grid.Row="3"
               Visibility="{Binding Deck.Type, Converter={Converters:DeckTypeToArenaRankVisibiltyCollapsed}}"/>
        <local:ArenaRank Grid.Row="3" Grid.Column="1"
                         SelectedRank="{Binding Deck.ArenaRank, Mode=TwoWay}" 
                         Visibility="{Binding Deck.Type, Converter={Converters:DeckTypeToArenaRankVisibiltyCollapsed}}"
        />
        <UniformGrid Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
            <Button Content="Cancel" HorizontalAlignment="Stretch" 
                    Command="{Binding CommandButtonCancel}"
                    >
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource CommandMultipleParamatersConverter}">
                        <Binding Path=""/>
                        <Binding Path="DataContext" ElementName="deckClass"/>
                    </MultiBinding>
                </Button.CommandParameter>
            </Button>
            <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Stretch" Margin="10,20,10,0" Style="{DynamicResource SaveButton}"
                    Command="{Binding CommandButtonSave}" 
                    >
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource CommandMultipleParamatersConverter}">
                        <Binding Path=""/>
                        <Binding Path="DataContext" ElementName="deckClass"/>
                    </MultiBinding>
                </Button.CommandParameter>
            </Button>
        </UniformGrid>
    </Grid>
</UserControl>
