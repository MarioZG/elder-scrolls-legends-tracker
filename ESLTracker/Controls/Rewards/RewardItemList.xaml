<UserControl x:Class="ESLTracker.Controls.Rewards.RewardItemList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ESLTracker.Controls.Rewards"
             xmlns:Converters="clr-namespace:ESLTracker.Utils.Converters"
             xmlns:Cards="clr-namespace:ESLTracker.Controls.Cards"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d" 
             x:Name="rewardItemList"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <CollectionViewSource x:Key="RewardsGroup"                              
                      Source="{Binding}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Reason" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>
    <ListView  
            x:Name="dataGrid" 
            Grid.Row="1" 
            DataContext="{StaticResource RewardsGroup}"
            ItemsSource="{Binding}"
            Tag="{Binding Parent.DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
            >
        <ListView.GroupStyle>
            <GroupStyle>
                <GroupStyle.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock FontWeight="SemiBold" Text="{Binding Name}"/>
                    </DataTemplate>
                </GroupStyle.HeaderTemplate>
            </GroupStyle>
        </ListView.GroupStyle>
        <ListView.ItemsPanel>
            <ItemsPanelTemplate>
                <StackPanel Orientation="{Binding PanelOrientation,ElementName=rewardItemList}" HorizontalAlignment="Stretch"></StackPanel>
            </ItemsPanelTemplate>
        </ListView.ItemsPanel>
        <ListView.ItemContainerStyle>
            <Style TargetType="ListBoxItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            </Style>
        </ListView.ItemContainerStyle>
        <ListView.ItemTemplate>
            <DataTemplate>
                <DockPanel LastChildFill="False">
                    <Button x:Name="btnDelete" Margin="0,5,0,5"
                                KeyboardNavigation.IsTabStop="False"
                                DockPanel.Dock="Right"
                                ToolTip="Remove pile"
                                BorderBrush="{x:Null}"
                                Background="{x:Null}"
                                Foreground="White"
                                Visibility="{Binding ShowCommands, ElementName=rewardItemList, Converter={Converters:BoolToVisibilty}}"
                                Command="{Binding DeleteCommand, ElementName=rewardItemList}"
                                CommandParameter="{Binding}">
                        <Button.Content>
                            <fa:ImageAwesome Foreground="DimGray" Icon="Remove" Height="12"/>
                        </Button.Content>
                    </Button>
                    <Button x:Name="btnAdd" Margin="0,5,0,5"
                                KeyboardNavigation.IsTabStop="False"
                                DockPanel.Dock="Right"
                                ToolTip="Goto edit pile"
                                BorderBrush="{x:Null}"
                                Background="{x:Null}"
                                Foreground="Gray"
                                Visibility="{Binding ShowCommands,ElementName=rewardItemList, Converter={Converters:BoolToVisibilty}}"
                                Command="{Binding EditCommand, ElementName=rewardItemList}"
                                CommandParameter="{Binding}">
                        <Button.Content>
                            <fa:ImageAwesome Foreground="DimGray" Icon="ShareSquareOutline" Height="12"/>
                        </Button.Content>
                    </Button>
                    <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="5,0,5,0" FontSize="16" FontWeight="SemiBold" Text="{Binding Quantity}" />
                    <Image Width="25" Source="{Binding TypeIcon}" ToolTip="{Binding Type}"
                           Visibility="{Binding CardInstance, Converter={Converters:ObjectToVisibilty}, ConverterParameter=not}"/>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Cards:SelectCard 
                                CardInstance="{Binding CardInstance}" 
                                ReadOnly="True" 
                                ShowIsPremium="True"
                                Visibility="{Binding CardInstance, Converter={Converters:ObjectToVisibilty}}"/>
                        </StackPanel>
                        <TextBlock Text="{Binding Comment}" 
                                  Visibility="{Binding Comment, Converter={Converters:StringNonEmptyToVisibiltyCollapsedConverter}}" />
                        <TextBlock Text="{Binding RewardQuestGuild}"
                                  Visibility="{Binding RewardQuestGuild, Converter={Converters:ObjectToVisibilty}}" />                        
                    </StackPanel> 
                </StackPanel>
                </DockPanel>
            </DataTemplate>
        </ListView.ItemTemplate>
        <ListView.Style>
            <Style TargetType="ListView" BasedOn="{StaticResource {x:Type ListBox}}">
                <Style.Triggers>
                    <DataTrigger 
                    Binding="{Binding ShowCommands, RelativeSource={RelativeSource AncestorType=UserControl}}"
                    Value="True"
                    >
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu Visibility="{Binding Path=PlacementTarget.Parent.ShowCommands,RelativeSource={RelativeSource Self}, Converter={Converters:BoolToVisibilty}}"
                         DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Header="Edit" 
                          Command="{Binding CommandEditReward}"
                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}">
                                            <MenuItem.Icon>
                                                <fa:ImageAwesome Foreground="DimGray" Icon="Plus" Height="12"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Delete" 
                          Command="{Binding CommandDeleteReward}"
                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}">
                                            <MenuItem.Icon>
                                                <fa:ImageAwesome Foreground="DimGray" Icon="Remove" Height="12"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ListView.Style>

    </ListView>
</UserControl>
